// <auto-generated />
using System;
using BookingTourHutech.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingTourHutech.Migrations
{
    [DbContext(typeof(BookingTourDbContext))]
    [Migration("20240405070108_galary")]
    partial class galary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingTourHutech.Models.BookingTour", b =>
                {
                    b.Property<int>("BookingTourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingTourId"));

                    b.Property<string>("ActivationMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.HasKey("BookingTourId");

                    b.ToTable("BookingTours");
                });

            modelBuilder.Entity("BookingTourHutech.Models.CategoryTour", b =>
                {
                    b.Property<int>("CategoryTourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryTourId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryNameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryTourId");

                    b.ToTable("CategoryTours");
                });

            modelBuilder.Entity("BookingTourHutech.Models.DetailBooking", b =>
                {
                    b.Property<int>("DetailBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailBookingId"));

                    b.Property<int>("BookingTourId")
                        .HasColumnType("int");

                    b.Property<double>("Disconut")
                        .HasColumnType("float");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<double>("TourPrice")
                        .HasColumnType("float");

                    b.HasKey("DetailBookingId");

                    b.HasIndex("BookingTourId");

                    b.HasIndex("TourId");

                    b.ToTable("DetailBookings");
                });

            modelBuilder.Entity("BookingTourHutech.Models.Gallary", b =>
                {
                    b.Property<int>("IdGallary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGallary"));

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGallary");

                    b.ToTable("gallaries");
                });

            modelBuilder.Entity("BookingTourHutech.Models.Suplier", b =>
                {
                    b.Property<int>("SuplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuplierId"));

                    b.Property<string>("AddressSuplier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DescriptionSuplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneSuplier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SuplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("deputyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SuplierId");

                    b.ToTable("Supliers");
                });

            modelBuilder.Entity("BookingTourHutech.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<int>("CategoryTourId")
                        .HasColumnType("int");

                    b.Property<string>("ImageTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuplierId")
                        .HasColumnType("int");

                    b.Property<string>("TourDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TourPrice")
                        .HasColumnType("float");

                    b.HasKey("TourId");

                    b.HasIndex("CategoryTourId");

                    b.HasIndex("SuplierId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("BookingTourHutech.Models.DetailBooking", b =>
                {
                    b.HasOne("BookingTourHutech.Models.BookingTour", "BookingTour")
                        .WithMany("DetailBookings")
                        .HasForeignKey("BookingTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingTourHutech.Models.Tour", "Tour")
                        .WithMany("DetailBookings")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingTour");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("BookingTourHutech.Models.Tour", b =>
                {
                    b.HasOne("BookingTourHutech.Models.CategoryTour", "CategoryTourIdNavigation")
                        .WithMany("Tours")
                        .HasForeignKey("CategoryTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingTourHutech.Models.Suplier", "SuplierIdNavigation")
                        .WithMany()
                        .HasForeignKey("SuplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryTourIdNavigation");

                    b.Navigation("SuplierIdNavigation");
                });

            modelBuilder.Entity("BookingTourHutech.Models.BookingTour", b =>
                {
                    b.Navigation("DetailBookings");
                });

            modelBuilder.Entity("BookingTourHutech.Models.CategoryTour", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("BookingTourHutech.Models.Tour", b =>
                {
                    b.Navigation("DetailBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
